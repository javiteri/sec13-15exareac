{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\BootCamp\\\\ReactInter\\\\sec04-06\\\\tareapp\\\\src\\\\components\\\\pure\\\\forms\\\\registerFormik.jsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup'; // Models\n\nimport { ROLES } from '../../../models/roles.enum';\nimport { User } from '../../../models/user.class';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registerformik = () => {\n  let user = new User();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n    confirm: '',\n    // to confirm password\n    role: ROLES.USER\n  };\n  const registerSchema = Yup.object().shape({\n    username: Yup.string().min(6, 'Username too short').max(12, 'Username too long').required('Username is required'),\n    email: Yup.string().email('Invalid email format').required('Email is required'),\n    role: Yup.string().oneOf([ROLES.USER, ROLES.ADMIN], 'You must select a Role: User / Admin').required('Role is required'),\n    password: Yup.string().min(8, 'Password too short').required('Password is required'),\n    confirm: Yup.string().when(\"password\", {\n      is: value => value && value.length > 0 ? true : false,\n      then: Yup.string().oneOf([Yup.ref(\"password\")], 'Â¡Passwords must match!')\n    }).required('You must confirm the password')\n  });\n\n  const submit = values => {\n    alert('Register user');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Register Formik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues // *** Yup Validation Schema ***\n      ,\n      validationSchema: registerSchema // ** onSubmit Event\n      ,\n      onSubmit: async values => {\n        await new Promise(r => setTimeout(r, 1000));\n        alert(JSON.stringify(values, null, 2));\n      },\n      children: _ref => {\n        let {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"username\",\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Your username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"username\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"email\",\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"example@email.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"confirm\",\n            name: \"confirm\",\n            placeholder: \"confirm passsword\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), errors.confirm && touched.confirm && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"confirm\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Register Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sending your credentials...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 46\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Registerformik;\nexport default Registerformik;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registerformik\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","ROLES","User","Registerformik","user","initialValues","username","email","password","confirm","role","USER","registerSchema","object","shape","string","min","max","required","oneOf","ADMIN","when","is","value","length","then","ref","submit","values","alert","Promise","r","setTimeout","JSON","stringify","touched","errors","isSubmitting","handleChange","handleBlur"],"sources":["C:/Users/Usuario/Desktop/BootCamp/ReactInter/sec04-06/tareapp/src/components/pure/forms/registerFormik.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// Models\r\nimport { ROLES } from '../../../models/roles.enum';\r\nimport { User } from '../../../models/user.class';\r\n\r\nconst Registerformik = () => {\r\n\r\n    let user = new User();\r\n\r\n    const initialValues = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirm: '', // to confirm password\r\n        role: ROLES.USER\r\n    }\r\n\r\n    const registerSchema = Yup.object().shape(\r\n        {\r\n            username: Yup.string()\r\n                .min(6, 'Username too short')\r\n                .max(12, 'Username too long')\r\n                .required('Username is required'),\r\n            email: Yup.string()\r\n                .email('Invalid email format')\r\n                .required('Email is required'),\r\n            role: Yup.string()\r\n                .oneOf([ROLES.USER, ROLES.ADMIN], 'You must select a Role: User / Admin')\r\n                .required('Role is required'),\r\n            password: Yup.string()\r\n                .min(8, 'Password too short')\r\n                .required('Password is required'),\r\n            confirm: Yup.string()\r\n                .when(\"password\", {\r\n                    is: value => (value && value.length > 0 ? true : false),\r\n                    then: Yup.string().oneOf(\r\n                        [Yup.ref(\"password\")],\r\n                        'Â¡Passwords must match!'\r\n                    )\r\n                }).required('You must confirm the password')\r\n        }\r\n    )\r\n\r\n    const submit = (values) => {\r\n        alert('Register user')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Register Formik</h4>\r\n            <Formik\r\n                initialValues = {initialValues}\r\n                // *** Yup Validation Schema ***\r\n                validationSchema = {registerSchema}\r\n                // ** onSubmit Event\r\n                onSubmit={async (values) => {\r\n                        await new Promise((r) => setTimeout(r, 1000));\r\n                    alert(JSON.stringify(values, null, 2))\r\n                }}\r\n            >\r\n\r\n            {({ values,\r\n                    touched,\r\n                    errors,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur }) => (\r\n                        <Form>\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <Field id=\"username\" type=\"text\" name=\"username\" placeholder=\"Your username\" />\r\n                            \r\n                            {/* Username Errors */}\r\n                            {\r\n                                errors.username && touched.username && \r\n                                (\r\n                                    <ErrorMessage name=\"username\" component='div'></ErrorMessage>\r\n                                )\r\n                            }\r\n\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <Field id=\"email\" type=\"email\" name=\"email\" placeholder=\"example@email.com\" />\r\n\r\n                            {/* Email Errors */}\r\n                            {\r\n                                errors.email && touched.email && \r\n                                (\r\n                                    <ErrorMessage name=\"email\" component='div'></ErrorMessage>\r\n                                )\r\n                            }\r\n\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Field\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"password\"\r\n                                type='password'\r\n                            />\r\n                            {/* Password Errors */}\r\n                            {\r\n                                errors.password && touched.password && \r\n                                (\r\n                                    <ErrorMessage name=\"password\" component='div'></ErrorMessage>\r\n                                )\r\n                            }\r\n\r\n                            <label htmlFor=\"confirm\">Password</label>\r\n                            <Field\r\n                                id=\"confirm\"\r\n                                name=\"confirm\"\r\n                                placeholder=\"confirm passsword\"\r\n                                type='password'\r\n                            />\r\n                            {/* Confirm Password Errors */}\r\n                            {\r\n                                errors.confirm && touched.confirm && \r\n                                (\r\n                                    <ErrorMessage name=\"confirm\" component='div'></ErrorMessage>\r\n                                )\r\n                            }\r\n\r\n                            <button type=\"submit\">Register Account</button>\r\n                            {isSubmitting ? (<p>Sending your credentials...</p>): null}\r\n\r\n                        </Form>\r\n                    )\r\n            }\r\n\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registerformik;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}