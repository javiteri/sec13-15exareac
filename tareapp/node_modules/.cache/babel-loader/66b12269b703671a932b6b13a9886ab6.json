{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\BootCamp\\\\ReactInter\\\\sec13-15exareac\\\\tareapp\\\\src\\\\components\\\\containers\\\\task_list.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import PropTypes from 'prop-types' se puede omitir se da por entendido\n\nimport { Task } from '../../models/task.class';\nimport { LEVELS } from '../../models/levels.enum';\nimport TaskComponent from '../pure/task';\nimport '../../styles/task.scss';\nimport TaskForm from '../pure/forms/taskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasklistComponent = () => {\n  _s();\n\n  const defaultTask1 = new Task('Example', 'Default', true, LEVELS.NORMAL);\n  const defaultTask2 = new Task('Example', 'Default', true, LEVELS.URGENT);\n  const defaultTask3 = new Task('Example', 'Default', false, LEVELS.BLOCKING); //Estado del componente\n\n  const [tasks, setTasks] = useState([defaultTask1, defaultTask2, defaultTask3]); //\n\n  const [loading, setLoading] = useState(true); //Control del ciclo de vida del componente\n\n  useEffect(() => {\n    console.log('Task State has been modified');\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    return () => {\n      console.log('TaskList componente is going to unmount...');\n    };\n  }, [tasks]); //const changeCompleted = (id) => {\n  //  console.log('changeState de una tarea', id);\n  //}\n\n  function completedTask(task) {\n    console.log('Complete this task', task);\n    const index = tasks.indexOf(task);\n    console.log(index);\n    const tempTasks = [...tasks];\n    tempTasks[index].completed = !tempTasks[index].completed; //We update the stare of the component and will it update the\n    //iteration of the tasks in order to show the task updated\n\n    setTasks(tempTasks);\n  }\n\n  function deletedTask(task) {\n    console.log('Delete this task', task);\n    const index = tasks.indexOf(task);\n    const tempTasks = [...tasks];\n    tempTasks.splice(index, 1); //We update the stare of the component and will it update the\n    //iteration of the tasks in order to show the task updated\n\n    setTasks(tempTasks);\n  }\n\n  function addTask(task) {\n    console.log('Delete this task', task); //const index = tasks.indexOf(task);\n\n    const tempTasks = [...tasks];\n    tempTasks.push(task);\n    setTasks(tempTasks);\n  }\n\n  const Table = () => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map((task, index) => {\n          return /*#__PURE__*/_jsxDEV(TaskComponent, {\n            task: task,\n            complete: completedTask,\n            remove: deletedTask\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n\n  let tasksTable;\n\n  if (tasks.length > 0) {\n    tasksTable = /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }, this);\n  } else {\n    tasksTable = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"There are not tasks to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please, Create new tasks one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this);\n  }\n\n  const loadingStyle = {\n    color: 'gray',\n    fontSize: '30px',\n    fontWeight: 'bold'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        \"data-mdb-perfect-scrollbar\": \"true\",\n        style: {\n          position: 'relative',\n          height: '400px'\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: loadingStyle,\n          children: \"loading tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 23\n        }, this) : tasksTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      add: addTask,\n      length: tasks.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n/*Task_list.propTypes = {\r\n}*/\n\n\n_s(TasklistComponent, \"kZu/ixoiPpGSg8gzXshHAUoGZjg=\");\n\n_c = TasklistComponent;\nexport default TasklistComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasklistComponent\");","map":{"version":3,"names":["React","useState","useEffect","Task","LEVELS","TaskComponent","TaskForm","TasklistComponent","defaultTask1","NORMAL","defaultTask2","URGENT","defaultTask3","BLOCKING","tasks","setTasks","loading","setLoading","console","log","setTimeout","completedTask","task","index","indexOf","tempTasks","completed","deletedTask","splice","addTask","push","Table","map","tasksTable","length","loadingStyle","color","fontSize","fontWeight","position","height"],"sources":["C:/Users/Usuario/Desktop/BootCamp/ReactInter/sec13-15exareac/tareapp/src/components/containers/task_list.jsx"],"sourcesContent":["import React, { useState, useEffect }  from 'react'\r\n//import PropTypes from 'prop-types' se puede omitir se da por entendido\r\nimport {Task} from '../../models/task.class'\r\nimport {LEVELS} from '../../models/levels.enum'\r\nimport TaskComponent from '../pure/task'\r\nimport '../../styles/task.scss'\r\nimport TaskForm from '../pure/forms/taskForm'\r\n\r\nconst TasklistComponent=() => {\r\n   \r\n  const defaultTask1 = new Task ('Example','Default', true, LEVELS.NORMAL) \r\n  const defaultTask2 = new Task ('Example','Default', true, LEVELS.URGENT) \r\n  const defaultTask3 = new Task ('Example','Default', false, LEVELS.BLOCKING)   \r\n  \r\n  //Estado del componente\r\n  const [tasks, setTasks] = useState([defaultTask1, defaultTask2, defaultTask3]);\r\n //\r\n const [loading, setLoading] = useState(true);\r\n\r\n\r\n  //Control del ciclo de vida del componente\r\n  useEffect(() => {\r\n    console.log('Task State has been modified');\r\n    setTimeout(() => {\r\n      setLoading(false);  \r\n    }, 2000);\r\n    \r\n    return () => {\r\n      console.log('TaskList componente is going to unmount...');\r\n    };\r\n  }, [tasks]);\r\n\r\n  //const changeCompleted = (id) => {\r\n  //  console.log('changeState de una tarea', id);\r\n  //}\r\n\r\n  function completedTask(task) {\r\n    console.log('Complete this task', task);\r\n    const index = tasks.indexOf(task);\r\n    console.log(index);\r\n    const tempTasks = [...tasks];\r\n    tempTasks[index].completed=!tempTasks[index].completed;\r\n    //We update the stare of the component and will it update the\r\n    //iteration of the tasks in order to show the task updated\r\n    setTasks(tempTasks);\r\n  }\r\n\r\n  function deletedTask(task) {\r\n    console.log('Delete this task', task);\r\n    const index = tasks.indexOf(task);\r\n    const tempTasks = [...tasks];\r\n    tempTasks.splice(index, 1);\r\n    //We update the stare of the component and will it update the\r\n    //iteration of the tasks in order to show the task updated\r\n    setTasks(tempTasks);\r\n  }\r\n\r\n  function addTask(task){\r\n    console.log('Delete this task', task);\r\n    //const index = tasks.indexOf(task);\r\n    const tempTasks = [...tasks];\r\n    tempTasks.push(task);\r\n    setTasks(tempTasks);\r\n  }\r\n\r\n  const Table=()=> {\r\n    return (\r\n      <table>\r\n            <thead>\r\n              <tr>\r\n                <th scope='col'>Title</th>\r\n                <th scope='col'>Description</th>\r\n                <th scope='col'>Priority</th>\r\n                <th scope='col'>Actions</th>\r\n              </tr>                \r\n            </thead>\r\n            <tbody>\r\n              {/**Iterar una lista de tareas */}\r\n              {/*Aplicar un for/map para rendirizar una lista*/}\r\n              { tasks.map((task, index) => {\r\n                return(\r\n                      <TaskComponent \r\n                        key={index} \r\n                        task={task}\r\n                        complete={completedTask}\r\n                        remove={deletedTask}\r\n                        >\r\n                      </TaskComponent>\r\n                    )\r\n                  }\r\n                )\r\n              }\r\n            </tbody>\r\n            </table>          \r\n    )\r\n  }\r\n\r\n  let tasksTable;\r\n\r\n  if(tasks.length > 0) {\r\n    tasksTable=<Table></Table>\r\n  }else{\r\n    tasksTable= (\r\n    <div>\r\n      <h3>There are not tasks to show</h3>\r\n      <h3>Please, Create new tasks one</h3>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  const loadingStyle={\r\n    color: 'gray',\r\n    fontSize: '30px',\r\n    fontWeight: 'bold',\r\n  }\r\n\r\n  return (\r\n        <div className='col-12'>\r\n          <div className='card'>\r\n          {/***Card Header***/}            \r\n            <div className='card-header p-3'>\r\n                <h1>Your Tasks:</h1>\r\n              \r\n            </div> \r\n          {/***Card Body***/}\r\n          <div className='card-body' data-mdb-perfect-scrollbar='true' style={{position:'relative', height:'400px'}}>\r\n            {loading?(<p style={loadingStyle} >loading tasks</p>) : tasksTable}\r\n          </div>\r\n         </div>\r\n         <TaskForm add={addTask} length={tasks.length} ></TaskForm>\r\n        </div>  \r\n    \r\n  );\r\n};\r\n\r\n/*Task_list.propTypes = {\r\n}*/\r\n\r\n\r\nexport default TasklistComponent\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}