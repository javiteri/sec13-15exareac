{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\BootCamp\\\\ReactInter\\\\sec13-15exareac\\\\tareapp\\\\src\\\\components\\\\pure\\\\forms\\\\taskForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { LEVELS } from '../../../models/levels.enum';\nimport { Task } from '../../../models/task.class';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskForm = _ref => {\n  _s();\n\n  let {\n    add,\n    length\n  } = _ref;\n  const nameRef = useRef('');\n  const descriptionRef = useRef('');\n  const levelRef = useRef(LEVELS.NORMAL);\n\n  function addTask(e) {\n    e.preventDefault();\n    const newTask = new Task(nameRef.current.value, descriptionRef.current.value, false, levelRef.current.value);\n    add(newTask);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addTask,\n    className: \"d-flex justify-content-center align-items-center mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-outline flex-fill\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameRef,\n        id: \"inputName\",\n        type: \"text\",\n        className: \"form-control form-control-lg\",\n        required: true,\n        autoFocus: true,\n        placeholder: \"Ingese Nombre...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: descriptionRef,\n        id: \"inputDescription\",\n        type: \"text\",\n        className: \"form-control form-control-lg\",\n        required: true,\n        placeholder: \"Ingese Descripcion...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectLevel\",\n        className: \"sr-only\",\n        children: \"Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: levelRef,\n        defaultValue: LEVELS.NORMAL,\n        id: \"selectLevel\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: LEVELS.NORMAL,\n          children: \"NORMAL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: LEVELS.URGENT,\n          children: \"URGENTE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: LEVELS.BLOCKING,\n          children: \"BLOCKEADO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success btn-lg ms-2\",\n      children: length > 0 ? 'Add New Task' : 'Create your first Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskForm, \"seNEd1wqVcYfR2KJ17YyyxmyDz8=\");\n\n_c = TaskForm;\nTaskForm.propTypes = {\n  add: PropTypes.func.isRequired,\n  length: PropTypes.number.isRequired\n};\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useRef","PropTypes","LEVELS","Task","TaskForm","add","length","nameRef","descriptionRef","levelRef","NORMAL","addTask","e","preventDefault","newTask","current","value","URGENT","BLOCKING","propTypes","func","isRequired","number"],"sources":["C:/Users/Usuario/Desktop/BootCamp/ReactInter/sec13-15exareac/tareapp/src/components/pure/forms/taskForm.jsx"],"sourcesContent":["import React, {useRef} from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport {LEVELS} from '../../../models/levels.enum';\r\nimport {Task} from '../../../models/task.class';\r\n\r\nconst TaskForm = ({add,length}) => {\r\n    \r\n    const nameRef= useRef('');\r\n    const descriptionRef= useRef('');\r\n    const levelRef= useRef(LEVELS.NORMAL);\r\n    \r\n    function addTask(e) {\r\n        e.preventDefault();\r\n        const newTask = new Task(\r\n            nameRef.current.value,\r\n            descriptionRef.current.value,\r\n            false,\r\n            levelRef.current.value,\r\n        );\r\n        add(newTask);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addTask} className=\"d-flex justify-content-center align-items-center mb-4\" >\r\n         <div className='form-outline flex-fill'>\r\n         <input ref={nameRef} id='inputName' type='text' className='form-control form-control-lg' required autoFocus placeholder='Ingese Nombre...'/>\r\n         <input ref={descriptionRef} id='inputDescription' type='text' className='form-control form-control-lg' required placeholder='Ingese Descripcion...'/>\r\n         <label htmlFor='selectLevel' className='sr-only'>Priority</label>\r\n         <select ref={levelRef} defaultValue={LEVELS.NORMAL} id='selectLevel'>\r\n            <option value={LEVELS.NORMAL}>\r\n                NORMAL\r\n            </option>\r\n            <option value={LEVELS.URGENT}>\r\n                URGENTE\r\n            </option>\r\n            <option value={LEVELS.BLOCKING}>\r\n                BLOCKEADO\r\n            </option>\r\n         </select>\r\n         </div>\r\n         <button type='submit' className='btn btn-success btn-lg ms-2'>\r\n         {length > 0 ? 'Add New Task':'Create your first Task'}\r\n         </button>\r\n        </form>\r\n    );\r\n}\r\nTaskForm.propTypes ={\r\n    add: PropTypes.func.isRequired,\r\n    length: PropTypes.number.isRequired,\r\n}\r\nexport default TaskForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,QAAqB,6BAArB;AACA,SAAQC,IAAR,QAAmB,4BAAnB;;;AAEA,MAAMC,QAAQ,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAACC,GAAD;IAAKC;EAAL,CAAiB;EAE/B,MAAMC,OAAO,GAAEP,MAAM,CAAC,EAAD,CAArB;EACA,MAAMQ,cAAc,GAAER,MAAM,CAAC,EAAD,CAA5B;EACA,MAAMS,QAAQ,GAAET,MAAM,CAACE,MAAM,CAACQ,MAAR,CAAtB;;EAEA,SAASC,OAAT,CAAiBC,CAAjB,EAAoB;IAChBA,CAAC,CAACC,cAAF;IACA,MAAMC,OAAO,GAAG,IAAIX,IAAJ,CACZI,OAAO,CAACQ,OAAR,CAAgBC,KADJ,EAEZR,cAAc,CAACO,OAAf,CAAuBC,KAFX,EAGZ,KAHY,EAIZP,QAAQ,CAACM,OAAT,CAAiBC,KAJL,CAAhB;IAMAX,GAAG,CAACS,OAAD,CAAH;EACH;;EAED,oBACI;IAAM,QAAQ,EAAEH,OAAhB;IAAyB,SAAS,EAAC,uDAAnC;IAAA,wBACC;MAAK,SAAS,EAAC,wBAAf;MAAA,wBACA;QAAO,GAAG,EAAEJ,OAAZ;QAAqB,EAAE,EAAC,WAAxB;QAAoC,IAAI,EAAC,MAAzC;QAAgD,SAAS,EAAC,8BAA1D;QAAyF,QAAQ,MAAjG;QAAkG,SAAS,MAA3G;QAA4G,WAAW,EAAC;MAAxH;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAO,GAAG,EAAEC,cAAZ;QAA4B,EAAE,EAAC,kBAA/B;QAAkD,IAAI,EAAC,MAAvD;QAA8D,SAAS,EAAC,8BAAxE;QAAuG,QAAQ,MAA/G;QAAgH,WAAW,EAAC;MAA5H;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAO,OAAO,EAAC,aAAf;QAA6B,SAAS,EAAC,SAAvC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA,eAIA;QAAQ,GAAG,EAAEC,QAAb;QAAuB,YAAY,EAAEP,MAAM,CAACQ,MAA5C;QAAoD,EAAE,EAAC,aAAvD;QAAA,wBACG;UAAQ,KAAK,EAAER,MAAM,CAACQ,MAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADH,eAIG;UAAQ,KAAK,EAAER,MAAM,CAACe,MAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJH,eAOG;UAAQ,KAAK,EAAEf,MAAM,CAACgB,QAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPH;MAAA;QAAA;QAAA;QAAA;MAAA,QAJA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAiBC;MAAQ,IAAI,EAAC,QAAb;MAAsB,SAAS,EAAC,6BAAhC;MAAA,UACCZ,MAAM,GAAG,CAAT,GAAa,cAAb,GAA4B;IAD7B;MAAA;MAAA;MAAA;IAAA,QAjBD;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH,CAxCD;;GAAMF,Q;;KAAAA,Q;AAyCNA,QAAQ,CAACe,SAAT,GAAoB;EAChBd,GAAG,EAAEJ,SAAS,CAACmB,IAAV,CAAeC,UADJ;EAEhBf,MAAM,EAAEL,SAAS,CAACqB,MAAV,CAAiBD;AAFT,CAApB;AAIA,eAAejB,QAAf"},"metadata":{},"sourceType":"module"}