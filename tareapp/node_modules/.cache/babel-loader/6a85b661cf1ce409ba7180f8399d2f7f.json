{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\BootCamp\\\\ReactInter\\\\sec04-06\\\\tareapp\\\\src\\\\components\\\\pure\\\\forms\\\\registerFormik.jsx\";\nimport React from 'react';\nimport { User } from '../../../models/user.class';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ROLES } from '../../../models/roles.enum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterFormik = () => {\n  let user = new User();\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n    confirm: '',\n    role: ROLES.USER\n  };\n  const registerSchema = Yup.object().shape({\n    username: Yup.string().min(6, 'Username too short').max(12, 'Username too long').requiered('Username is required'),\n    email: Yup.string().email('Invalid email format').requiered('email is required'),\n    role: Yup.string().oneOf([ROLES.USER, ROLES.ADMIN], 'You must select a Role: User / Admin').required('Role is required'),\n    password: Yup.string().min(8, 'Username too short').requiered('Password is required'),\n    confirm: Yup.string().when(\"password\", {\n      is: value => value && value.length > 0 ? true : false,\n      then: Yup.string().oneOf([Yup.ref(\"password\")], '!Password must much')\n    }).required('Ypu must confirm the password')\n  });\n\n  const submit = values => {\n    alert('Register user');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Register Formik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues //**Yup validation Schema */\n      ,\n      validationSchema: registerSchema //* on Submit event\n      ,\n      onSubmit: async values => {\n        await new Promise(r => setTimeout(r, 1000));\n        alert(JSON.stringify(values, null, 2)); //We save the data in the localstorage\n\n        localStorage.setItem('credentials', values);\n      },\n      children: _ref => {\n        let {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"username\",\n            name: \"username\",\n            placeholder: \"Your username\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), errors.username && touched.username &&\n          /*#__PURE__*/\n          //*<div>\n          //*{/*<p>{errors.email} </p>*/}\n          _jsxDEV(ErrorMessage, {\n            name: \"username\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 41\n          }, this) //*</div>\n          , /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"javiteri80@gmail.com\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), errors.email && touched.email &&\n          /*#__PURE__*/\n          //*<div>\n          //*{/*<p>{errors.email} </p>*/}\n          _jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 41\n          }, this) //*</div>\n          , /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Your username\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), errors.password && touched.password &&\n          /*#__PURE__*/\n          //*<div>\n          //*{/*<p>{errors.email} </p>*/}\n          _jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 41\n          }, this) //*</div>\n          , /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm\",\n            children: \"confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"confirm\",\n            name: \"confirm\",\n            placeholder: \"Your username\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), errors.confirm && touched.confirm &&\n          /*#__PURE__*/\n          //*<div>\n          //*{/*<p>{errors.email} </p>*/}\n          _jsxDEV(ErrorMessage, {\n            name: \"confirm\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 41\n          }, this) //*</div>\n          , /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Register Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sending your credentials...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 42\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RegisterFormik;\nexport default RegisterFormik;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterFormik\");","map":{"version":3,"names":["React","User","Formik","Form","Field","ErrorMessage","Yup","ROLES","RegisterFormik","user","initialValues","username","email","password","confirm","role","USER","registerSchema","object","shape","string","min","max","requiered","oneOf","ADMIN","required","when","is","value","length","then","ref","submit","values","alert","Promise","r","setTimeout","JSON","stringify","localStorage","setItem","touched","errors","isSubmitting","handleChange","handleBlur"],"sources":["C:/Users/Usuario/Desktop/BootCamp/ReactInter/sec04-06/tareapp/src/components/pure/forms/registerFormik.jsx"],"sourcesContent":["import React from 'react';\r\nimport {User} from '../../../models/user.class'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { ROLES } from '../../../models/roles.enum';\r\n\r\nconst RegisterFormik = () => {\r\n    let user = new User();\r\n\r\n    const initialValues={\r\n        username: '',\r\n        email:'',\r\n        password:'',\r\n        confirm:'',\r\n        role: ROLES.USER,\r\n    }\r\n\r\n\r\n    const registerSchema = Yup.object().shape(\r\n        {\r\n            username: Yup.string()\r\n                .min(6, 'Username too short')\r\n                .max(12, 'Username too long')\r\n                .requiered('Username is required'),\r\n\r\n            email: Yup.string()\r\n                .email('Invalid email format')\r\n                .requiered('email is required'),\r\n\r\n            role: Yup.string()\r\n                .oneOf([ROLES.USER, ROLES.ADMIN], 'You must select a Role: User / Admin')    \r\n                .required('Role is required'),\r\n\r\n            password: Yup.string()\r\n                .min(8, 'Username too short')\r\n                .requiered('Password is required'),\r\n\r\n            confirm: Yup.string()\r\n                .when(\"password\",{\r\n                    is:value=>(value && value.length > 0 ? true : false),\r\n                    then: Yup.string().oneOf(\r\n                        [Yup.ref(\"password\")],\r\n                        '!Password must much'\r\n                    )\r\n                }).required('Ypu must confirm the password')\r\n\r\n        }\r\n    )\r\n\r\n\r\n    const submit =(values)=>{\r\n        alert('Register user')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Register Formik</h4>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                //**Yup validation Schema */\r\n                validationSchema={registerSchema}\r\n                //* on Submit event\r\n                onSubmit={async(values)=>{\r\n                    await new Promise((r)=>setTimeout(r,1000));\r\n                    alert(JSON.stringify(values,null,2));\r\n                    //We save the data in the localstorage\r\n                    localStorage.setItem('credentials',values);\r\n                }}\r\n            >\r\n\r\n            {({ values,\r\n                    touched,\r\n                    errors,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur}) => (\r\n                        <Form>\r\n                        \r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <Field id=\"username\" name=\"username\" placeholder=\"Your username\" type=\"text\"/>\r\n                        {/* username Errors  */}\r\n                            {\r\n                                errors.username && touched.username &&(\r\n                                    //*<div>\r\n                                    //*{/*<p>{errors.email} </p>*/}\r\n                                        <ErrorMessage name=\"username\" component='div'></ErrorMessage>\r\n                                    //*</div>\r\n                                    \r\n                                )\r\n                            }\r\n\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <Field id=\"email\" name=\"email\" placeholder=\"javiteri80@gmail.com\" type=\"email\"/>\r\n                        {/* Email Errors  */}\r\n                            {\r\n                                errors.email && touched.email &&(\r\n                                    //*<div>\r\n                                    //*{/*<p>{errors.email} </p>*/}\r\n                                        <ErrorMessage name=\"email\" component='div'></ErrorMessage>\r\n                                    //*</div>\r\n                                    \r\n                                )\r\n                            }        \r\n\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <Field id=\"password\" name=\"password\" placeholder=\"Your username\" type=\"password\"/>\r\n                        {/* username Errors  */}\r\n                            {\r\n                                errors.password && touched.password &&(\r\n                                    //*<div>\r\n                                    //*{/*<p>{errors.email} </p>*/}\r\n                                        <ErrorMessage name=\"password\" component='div'></ErrorMessage>\r\n                                    //*</div>\r\n                                    \r\n                                )\r\n                            }    \r\n\r\n                        <label htmlFor=\"confirm\">confirm</label>\r\n                        <Field id=\"confirm\" name=\"confirm\" placeholder=\"Your username\" type=\"password\"/>\r\n                        {/* username Errors  */}\r\n                            {\r\n                                errors.confirm && touched.confirm &&(\r\n                                    //*<div>\r\n                                    //*{/*<p>{errors.email} </p>*/}\r\n                                        <ErrorMessage name=\"confirm\" component='div'></ErrorMessage>\r\n                                    //*</div>\r\n                                    \r\n                                )\r\n                            }    \r\n    \r\n                        <button type='submit'>Register Account</button>\r\n                        {isSubmitting ? (<p>Sending your credentials...</p>):null }    \r\n\r\n                        </Form>   \r\n                    )\r\n            }            \r\n            </Formik>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterFormik;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}