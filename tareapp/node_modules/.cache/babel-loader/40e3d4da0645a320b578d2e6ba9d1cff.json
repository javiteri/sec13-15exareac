{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\BootCamp\\\\ReactInter\\\\sec13-15exareac\\\\tareapp\\\\src\\\\components\\\\pure\\\\forms\\\\taskForm.jsx\";\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { LEVELS } from '../../../models/levels.enum';\nimport { Task } from '../../../models/task.class';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet obj = [];\nconst registerSchema = Yup.object().shape({\n  name: Yup.string().min(6, 'Username too short').max(12, 'Username too long').required('Username is required'),\n  description: Yup.string().min(6, 'Description too short').max(250, 'Description too long').required('Description is required'),\n  level: Yup.string().oneOf([LEVELS.NORMAL, LEVELS.URGENT, LEVELS.BLOCKING], 'You must select a Role: User / Admin').required('Level is required')\n});\n\nconst TaskForm = _ref => {\n  let {\n    add,\n    length\n  } = _ref;\n\n  function addTask() {\n    var content = JSON.parse(obj);\n    const newTask = new Task(content.name, content.description, false, content.level);\n    add(newTask);\n  }\n\n  const initialCredentials = {\n    name: \"\",\n    description: \"\",\n    completed: false,\n    level: LEVELS.NORMAL\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Anywhere in your app!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialCredentials // *** Yup Validation Schema ***\n      ,\n      validationSchema: registerSchema,\n      onSubmit: async (values, isSubmitting) => {\n        await new Promise(r => setTimeout(r, 1000));\n        obj = JSON.stringify(values, null, 2);\n        addTask();\n      },\n      children: _ref2 => {\n        let {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"name\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), errors.name && touched.name && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Descripcion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"description\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), errors.description && touched.description && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"description\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"priority\",\n              children: \"Priority: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"level\",\n              value: values.level,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              style: {\n                display: \"block\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                label: \"Select a Level\",\n                children: [\"Select a Level\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"normal\",\n                label: \"NORMAL\",\n                children: [\" \", \"NORMAL\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"urgent\",\n                label: \"URGENT\",\n                children: \"URGENT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"blocking\",\n                label: \"BLOCKING\",\n                children: \"BLOCKING\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), errors.level && touched.level && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"level\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success btn-lg ms-2\",\n            children: length > 0 ? 'Add New Task' : 'Create your first Task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TaskForm;\nTaskForm.propTypes = {\n  add: PropTypes.func.isRequired,\n  length: PropTypes.number.isRequired\n};\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useRef","PropTypes","LEVELS","Task","Formik","Form","Field","ErrorMessage","Yup","obj","registerSchema","object","shape","name","string","min","max","required","description","level","oneOf","NORMAL","URGENT","BLOCKING","TaskForm","add","length","addTask","content","JSON","parse","newTask","initialCredentials","completed","values","isSubmitting","Promise","r","setTimeout","stringify","touched","errors","handleChange","handleBlur","display","propTypes","func","isRequired","number"],"sources":["C:/Users/Usuario/Desktop/BootCamp/ReactInter/sec13-15exareac/tareapp/src/components/pure/forms/taskForm.jsx"],"sourcesContent":["import React, {useRef} from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport {LEVELS} from '../../../models/levels.enum';\r\nimport {Task} from '../../../models/task.class';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nlet obj=[];\r\n\r\nconst registerSchema = Yup.object().shape(\r\n    {\r\n        name: Yup.string()\r\n            .min(6, 'Username too short')\r\n            .max(12, 'Username too long')\r\n            .required('Username is required'),\r\n            \r\n        description: Yup.string()\r\n            .min(6, 'Description too short')\r\n            .max(250, 'Description too long')\r\n            .required('Description is required'),    \r\n\r\n        level: Yup.string()\r\n            .oneOf([LEVELS.NORMAL, LEVELS.URGENT, LEVELS.BLOCKING], 'You must select a Role: User / Admin')\r\n            .required('Level is required'),\r\n    }\r\n)\r\n\r\nconst TaskForm = ({add,length}) => {\r\n\r\n    function addTask() {\r\n        var content = JSON.parse(obj);\r\n        const newTask = new Task(\r\n            content.name,\r\n            content.description,\r\n            false,\r\n            content.level,\r\n        );\r\n        add(newTask);\r\n    }\r\n\r\n    const initialCredentials={ \r\n        name: \"\", description: \"\", completed:false, level: LEVELS.NORMAL\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Anywhere in your app!</h3>\r\n            <Formik \r\n                initialValues={initialCredentials}\r\n                // *** Yup Validation Schema ***\r\n                validationSchema = {registerSchema}\r\n                onSubmit={async (values, isSubmitting) => {\r\n                    await new Promise((r) => setTimeout(r, 1000));\r\n                    obj=JSON.stringify(values, null, 2);\r\n                    addTask() \r\n                }}\r\n\r\n                > \r\n                {({ values,\r\n                    touched,\r\n                    errors,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur }) => ( \r\n                    <Form> \r\n                    <div className=\"form-group\"> <label htmlFor=\"name\">Title</label> \r\n                        <Field type=\"text\" name=\"name\" className=\"form-control\" /> \r\n                    </div> \r\n                    {/* Username Errors */}\r\n                    {errors.name && touched.name && \r\n                        (<ErrorMessage name=\"name\" component='div'></ErrorMessage>)\r\n                    }        \r\n                    <div className=\"form-group\"> <label htmlFor=\"description\">Descripcion</label> \r\n                        <Field type=\"text\" name=\"description\" className=\"form-control\" /> \r\n                    </div>\r\n                    {/* Username Errors */}\r\n                    {errors.description && touched.description && \r\n                        (<ErrorMessage name=\"description\" component='div'></ErrorMessage>)\r\n                    }\r\n                    <div className=\"form-group\"> <label htmlFor=\"priority\">Priority: </label> \r\n                        <select name=\"level\" value={values.level} onChange={handleChange} onBlur={handleBlur}style={{ display: \"block\" }}>\r\n                            <option value=\"\" label=\"Select a Level\">Select a Level{\" \"}</option>\r\n                            <option value=\"normal\" label=\"NORMAL\">{\" \"}NORMAL</option>\r\n                            <option value=\"urgent\" label=\"URGENT\">URGENT</option>\r\n                            <option value=\"blocking\" label=\"BLOCKING\">BLOCKING</option>\r\n                        </select>\r\n                    </div>\r\n                    {errors.level && touched.level && \r\n                        (<ErrorMessage name=\"level\" component='div'></ErrorMessage>)\r\n                    }\r\n                    <button type='submit' className='btn btn-success btn-lg ms-2'>\r\n                        {length > 0 ? 'Add New Task':'Create your first Task'}\r\n                    </button>\r\n                    </Form> \r\n                )} \r\n\r\n            </Formik>\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\nTaskForm.propTypes ={\r\n    add: PropTypes.func.isRequired,\r\n    length: PropTypes.number.isRequired,\r\n}\r\nexport default TaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}