{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\BootCamp\\\\ReactInter\\\\sec04-06\\\\tareapp\\\\src\\\\components\\\\pure\\\\forms\\\\loginFormik.jsx\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email format').required('email is requiered'),\n  password: Yup.string().required('password is requiered')\n});\n\nconst LoginFormik = () => {\n  const initialCredentials = {\n    email: '',\n    password: ''\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik //*** Initial values that the form will take*/\n    , {\n      initialValues: initialCredentials //*** Yup validation Schema*/\n      ,\n      validationSchema: loginSchema //*** OnSubmit Event*/\n      ,\n      onSubmit: async values => {\n        await new Promise(r => setTimeout(r, 1000));\n        alert(JSON.stringify(values, null, 2)); //*** we save the data in the localstorage*/\n\n        localStorage.setItem('credentials', values);\n      },\n      children: _ref => {\n        let {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"javiteri80@gmail.com\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), errors.email && touched.email &&\n          /*#__PURE__*/\n          //*<div>\n          //*    <p>{errors.email} </p>\n          //*</div>\n          _jsxDEV(ErrorMessage, {\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [errors.password, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Login your credentials...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 46\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginFormik;\nexport default LoginFormik;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormik\");","map":{"version":3,"names":["React","Formik","Field","Form","ErrorMessage","Yup","loginSchema","object","shape","email","string","required","password","LoginFormik","initialCredentials","values","Promise","r","setTimeout","alert","JSON","stringify","localStorage","setItem","touched","errors","isSubmitting","handleChange","handleBlur"],"sources":["C:/Users/Usuario/Desktop/BootCamp/ReactInter/sec04-06/tareapp/src/components/pure/forms/loginFormik.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Formik, Field, Form, ErrorMessage} from 'formik'\r\nimport * as Yup from 'yup';\r\n\r\nconst loginSchema= Yup.object().shape(\r\n    {\r\n        email: Yup.string()\r\n                .email('Invalid email format')\r\n                .required('email is requiered'),\r\n        password: Yup.string()\r\n                .required('password is requiered'),        \r\n\r\n    }\r\n)\r\n\r\n\r\nconst LoginFormik = () => {\r\n    const initialCredentials={\r\n        email:'',\r\n        password:''\r\n    }\r\n    return (\r\n        <div>\r\n            <h4>Login Form</h4>\r\n            <Formik\r\n                //*** Initial values that the form will take*/\r\n                initialValues={initialCredentials}\r\n                //*** Yup validation Schema*/\r\n                validationSchema={loginSchema}\r\n                //*** OnSubmit Event*/\r\n                onSubmit={async(values)=> {\r\n                    await new Promise((r)=> setTimeout(r,1000));\r\n                    alert(JSON.stringify(values, null, 2));\r\n                    //*** we save the data in the localstorage*/\r\n                    localStorage.setItem('credentials',values)\r\n                }}>\r\n\r\n                {/* We obtain props from Formik  */}\r\n                 {({values, touched, errors, isSubmitting, handleChange,handleBlur,})=>(\r\n                    <Form>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <Field id=\"email\" name=\"email\" placeholder=\"javiteri80@gmail.com\" type=\"email\"/>\r\n                        {/* Email Errors  */}\r\n                            {\r\n                                errors.email && touched.email &&(\r\n                                    //*<div>\r\n                                    //*    <p>{errors.email} </p>\r\n                                    //*</div>\r\n                                    <ErrorMessage name='email'/>\r\n                                )\r\n                            }\r\n                        \r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <Field id=\"password\" name=\"password\" placeholder=\"password\" type=\"password\"/>\r\n                        {/* Password Errors  */}\r\n                            {\r\n                                errors.password && touched.password &&(\r\n                                    <div>\r\n                                        <p>{errors.password} </p>\r\n                                    </div>     \r\n                                )\r\n                            }\r\n\r\n                        <button type='submit'>Login</button>\r\n                            {isSubmitting ? (<p>Login your credentials...</p>):null }\r\n                    </Form>\r\n                 )\r\n                 }\r\n\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginFormik;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,YAA7B,QAAgD,QAAhD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,WAAW,GAAED,GAAG,CAACE,MAAJ,GAAaC,KAAb,CACf;EACIC,KAAK,EAAEJ,GAAG,CAACK,MAAJ,GACED,KADF,CACQ,sBADR,EAEEE,QAFF,CAEW,oBAFX,CADX;EAIIC,QAAQ,EAAEP,GAAG,CAACK,MAAJ,GACDC,QADC,CACQ,uBADR;AAJd,CADe,CAAnB;;AAYA,MAAME,WAAW,GAAG,MAAM;EACtB,MAAMC,kBAAkB,GAAC;IACrBL,KAAK,EAAC,EADe;IAErBG,QAAQ,EAAC;EAFY,CAAzB;EAIA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD,CACI;IADJ;MAEI,aAAa,EAAEE,kBAFnB,CAGI;MAHJ;MAII,gBAAgB,EAAER,WAJtB,CAKI;MALJ;MAMI,QAAQ,EAAE,MAAMS,MAAN,IAAgB;QACtB,MAAM,IAAIC,OAAJ,CAAaC,CAAD,IAAMC,UAAU,CAACD,CAAD,EAAG,IAAH,CAA5B,CAAN;QACAE,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL,CAFsB,CAGtB;;QACAO,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmCR,MAAnC;MACH,CAXL;MAAA,UAcM;QAAA,IAAC;UAACA,MAAD;UAASS,OAAT;UAAkBC,MAAlB;UAA0BC,YAA1B;UAAwCC,YAAxC;UAAqDC;QAArD,CAAD;QAAA,oBACE,QAAC,IAAD;UAAA,wBACI;YAAO,OAAO,EAAC,OAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,KAAD;YAAO,EAAE,EAAC,OAAV;YAAkB,IAAI,EAAC,OAAvB;YAA+B,WAAW,EAAC,sBAA3C;YAAkE,IAAI,EAAC;UAAvE;YAAA;YAAA;YAAA;UAAA,QAFJ,EAKYH,MAAM,CAAChB,KAAP,IAAgBe,OAAO,CAACf,KAAxB;UAAA;UACI;UACA;UACA;UACA,QAAC,YAAD;YAAc,IAAI,EAAC;UAAnB;YAAA;YAAA;YAAA;UAAA,QAThB,eAaI;YAAO,OAAO,EAAC,UAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAbJ,eAcI,QAAC,KAAD;YAAO,EAAE,EAAC,UAAV;YAAqB,IAAI,EAAC,UAA1B;YAAqC,WAAW,EAAC,UAAjD;YAA4D,IAAI,EAAC;UAAjE;YAAA;YAAA;YAAA;UAAA,QAdJ,EAiBYgB,MAAM,CAACb,QAAP,IAAmBY,OAAO,CAACZ,QAA3B,iBACI;YAAA,uBACI;cAAA,WAAIa,MAAM,CAACb,QAAX;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAlBhB,eAwBI;YAAQ,IAAI,EAAC,QAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAxBJ,EAyBSc,YAAY,gBAAI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAJ,GAAsC,IAzB3D;QAAA;UAAA;UAAA;UAAA;QAAA,QADF;MAAA;IAdN;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmDH,CAxDD;;KAAMb,W;AA0DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}